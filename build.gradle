buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.12.2-5.2.5"
group = "com.wynprice.secretroomsmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "secretroomsmod"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.1.2562"
    runDir = "run"
    mappings = "snapshot_20171003"
    
    replace "@CHANGE_VERSION@", "[5.0.0,)"
    replace "@MC_VERSION@", project.minecraft.version
    replace "@VERSION@", project.version
    replaceIn "SecretRooms5.java"
}

repositories {

    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }

    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

dependencies {
    deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.18-10"
    deobfCompile "cofh:RedstoneFlux:1.12-2.0.0.1:universal"
    deobfProvided "mezz.jei:jei_1.12.2:4.8.5.138:api"
    runtime "mezz.jei:jei_1.12.2:4.8.5.138"
   
}

//Adds the LoadingPlugin description to the manifest so forge finds it.
jar {
    manifest {
        attributes 'FMLCorePlugin': 'com.wynprice.secretroomsmod.core.SRMCore',
                'FMLCorePluginContainsFMLMod': 'true'
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


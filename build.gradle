buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "5.0.0"
group = "com.wynprice.secretroomsmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "secretroomsmod"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.0.2512"
    runDir = "run"
    mappings = "snapshot_20171003"
    
    replace "@CHANGE_VERSION@", "[5.0.0,)"
    replace "@MC_VERSION@", project.minecraft.version
    replace "@VERSION@", project.version
    replaceIn "SecretRooms2.java"
}

repositories {

     maven { // TOP
         name 'tterrag maven'
         url "http://maven.tterrag.com/"
    }

    maven {
         name = "CoFH Maven"
         url = "http://maven.covers1624.net"
    }
}

dependencies {
    deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.18-10"
    deobfCompile "cofh:RedstoneFlux:1.12-2.0.0.1:universal"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

// add a source jar
task sourceJar(type: Jar, dependsOn: "sourceMainJava") {
    from "build/sources/java"
    classifier = 'sources'
}

// add a javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

// deployement stuff

configurations { deployerJars }

dependencies { deployerJars "org.apache.maven.wagon:wagon-ssh:2.2" }

artifacts {
    archives sourceJar
    archives deobfJar
    archives javadocJar
}


uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars

            repository(url: "http://files.minecraftforge.net/maven/manage/upload") {
                authentication(userName: "wynprice", password: project.hasProperty(forgeMavenPass) ? null : project.getProperty('forgeMavenPass')) // the elvis operator. look it up.
            }

            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'SecretRoomsMod '
                    url 'https://github.com/AbrarSyed/SecretRoomsMod-forge'

                    scm {
                        url 'https://github.com/AbrarSyed/SecretRoomsMod-forge'
                        connection 'scm:git:git://github.com/AbrarSyed/SecretRoomsMod-forge.git'
                        developerConnection 'scm:git:git@github.com:AbrarSyed/SecretRoomsMod-forge.git'
                    }

                    issueManagement {
                        system 'github'
                        url 'https://github.com/AbrarSyed/SecretRoomsMod-forge/issues'
                    }

                    licenses {
                        license {
                            name 'The Eclipse Public Liscence'
                            url 'http://www.eclipse.org/legal/epl-v10.html'
                            distribution 'repo'
                        }
                    }

                    developers {
			developer {
                            id 'WynPrice'
                            name 'WynPrice'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
}
